apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.sonarqube'
apply from: "../jacoco-settings.gradle"

android {
    compileSdkVersion compileVersion
    defaultConfig {
        minSdkVersion minVersion
        targetSdkVersion targetVersion
        versionCode codeVersion
        versionName version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "listener", "com.squareup.leakcanary.FailTestOnLeakRunListener"
    }

    sourceSets {
        androidTest {
            resources.srcDirs += ['src/test/resources']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Rename the artifact to artifact_name-<version>.aar, required since gradle 7
            libraryVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = "${archivesBaseName}-${version}.aar"
                }
            }
        }
        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError true
        warningsAsErrors false
        lintConfig file("config/lint.xml")
    }
}

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

dependencies {

    api "com.hyperwallet.android:core-sdk:$hyperwalletCoreVersion"
    implementation "com.google.android.material:material:$androidMaterialVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    androidTestImplementation "androidx.test.ext:junit:$extJunitVerson"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    testImplementation group: 'org.mockito', name: 'mockito-core', version: "$mockitoVersion"
    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: "$junitParamsVersion"
}